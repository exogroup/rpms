[common]
# A literal address or host name for IPv6 must be enclosed
# in square brackets, as in "[::1]:80", "[ipv6-host]:http" or "[ipv6-host%zone]:80"
# For single "server_addr" field, no need square brackets, like "server_addr = ::".
server_addr = 127.0.0.1
server_port = 7000

# The maximum amount of time a dial to server will wait for a connect to complete. Default value is 10 seconds.
# dial_server_timeout = 10

# dial_server_keepalive specifies the interval between keep-alive probes for an active network connection between frpc and frps.
# If negative, keep-alive probes are disabled.
# dial_server_keepalive = 7200

# if you want to connect frps by http proxy or socks5 proxy or ntlm proxy, you can set http_proxy here or in global environment variables
# it only works when protocol is tcp
# http_proxy = http://user:passwd@192.168.1.128:8080
# http_proxy = socks5://user:passwd@192.168.1.128:1080
# http_proxy = ntlm://user:passwd@192.168.1.128:2080

# console or real logFile path like ./frpc.log
log_file = console

# trace, debug, info, warn, error
log_level = info
log_max_days = 3

# disable log colors when log_file is console, default is false
disable_log_color = false

# for authentication, should be same as your frps.ini
# authenticate_heartbeats specifies whether to include authentication token in heartbeats sent to frps. By default, this value is false.
authenticate_heartbeats = true

# authenticate_new_work_conns specifies whether to include authentication token in new work connections sent to frps. By default, this value is false.
authenticate_new_work_conns = true

# auth token
token = please_change_this_token

# oidc_client_id specifies the client ID to use to get a token in OIDC authentication if AuthenticationMethod == "oidc".
# By default, this value is "".
# oidc_client_id =

# oidc_client_secret specifies the client secret to use to get a token in OIDC authentication if AuthenticationMethod == "oidc".
# By default, this value is "".
# oidc_client_secret =

# oidc_audience specifies the audience of the token in OIDC authentication if AuthenticationMethod == "oidc". By default, this value is "".
# oidc_audience =

# oidc_token_endpoint_url specifies the URL which implements OIDC Token Endpoint.
# It will be used to get an OIDC token if AuthenticationMethod == "oidc". By default, this value is "".
# oidc_token_endpoint_url =

# oidc_additional_xxx specifies additional parameters to be sent to the OIDC Token Endpoint.
# For example, if you want to specify the "audience" parameter, you can set as follow.
# frp will add "audience=<value>" "var1=<value>" to the additional parameters.
# oidc_additional_audience = https://dev.auth.com/api/v2/
# oidc_additional_var1 = foobar

# set admin address for control frpc's action by http api such as reload
admin_addr = 127.0.0.1
admin_port = 7400
admin_user = admin
admin_pwd = admin
# Admin assets directory. By default, these assets are bundled with frpc.
# assets_dir = ./static

# connections will be established in advance, default value is zero
pool_count = 5

# if tcp stream multiplexing is used, default is true, it must be same with frps
# tcp_mux = true

# specify keep alive interval for tcp mux.
# only valid if tcp_mux is true.
# tcp_mux_keepalive_interval = 60

# your proxy name will be changed to {user}.{proxy}
# user = your_name

# decide if exit program when first login failed, otherwise continuous relogin to frps
# default is true
# login_fail_exit = true

# communication protocol used to connect to server
# supports tcp, kcp, quic and websocket now, default is tcp
# protocol = tcp

# set client binding ip when connect server, default is empty.
# only when protocol = tcp or websocket, the value will be used.
# connect_server_local_ip = 0.0.0.0

# if tls_enable is true, frpc will connect frps by tls
# tls_enable = true

# tls_cert_file = client.crt
# tls_key_file = client.key
# tls_trusted_ca_file = ca.crt
# tls_server_name = example.com

# specify a dns server, so frpc will use this instead of default one
# dns_server = 8.8.8.8

# proxy names you want to start separated by ','
# default is empty, means all proxies
# start = ssh,dns

# heartbeat configure, it's not recommended to modify the default value
# The default value of heartbeat_interval is 10 and heartbeat_timeout is 90. Set negative value
# to disable it.
# heartbeat_interval = 30
# heartbeat_timeout = 90

# additional meta info for client
# meta_var1 = 123
# meta_var2 = 234

# specify udp packet size, unit is byte. If not set, the default value is 1500.
# This parameter should be same between client and server.
# It affects the udp and sudp proxy.
# udp_packet_size = 1500

# include other config files for proxies.
# includes = ./confd/*.ini

# By default, frpc will connect frps with first custom byte if tls is enabled.
# If DisableCustomTLSFirstByte is true, frpc will not send that custom byte.
# disable_custom_tls_first_byte = false

# Enable golang pprof handlers in admin listener.
# Admin port must be set first.
# pprof_enable = false

# Sample configurations
# See: https://github.com/fatedier/frp#example-usage

# Expose a simple HTTP file server
#[test_static_file]
#type = tcp
#remote_port = 6000
#plugin = static_file
#plugin_local_path = /tmp/files
#plugin_strip_prefix = static
#plugin_http_user = abc
#plugin_http_passwd = abc

# HTTPS to HTTP proxy
#[test_https2http]
#type = https
#custom_domains = test.example.com
#plugin = https2http
#plugin_local_addr = 127.0.0.1:80
# These certificates should match the public FQDN
#plugin_crt_path = /etc/frp/ssl/frp.crt
#plugin_key_path = /etc/frp/ssl/frp.key
#plugin_host_header_rewrite = 127.0.0.1
#plugin_header_X-From-Where = frp

# HTTPS to HTTPS proxy
#[test_https2https]
#type = https
#custom_domains = test.example.com
#plugin = https2https
#plugin_local_addr = 127.0.0.1:443
# These certificates should match the public FQDN
#plugin_crt_path = /etc/frp/ssl/frp.crt
#plugin_key_path = /etc/frp/ssl/frp.key
#plugin_host_header_rewrite = 127.0.0.1
#plugin_header_X-From-Where = frp

# Expose a simple TCP application
#[test_ssh]
#type = tcp
#local_ip = 127.0.0.1
#local_port = 22
#remote_port = 7100
